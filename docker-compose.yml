# üê≥ Docker Compose pour SurfAI
# Configuration compl√®te avec backend + cache Redis + base PostgreSQL

version: '3.8'

services:
  # üöÄ Backend SurfAI
  surfai-backend:
    build: .
    container_name: surfai-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - REDIS_URL=redis://redis:6379
      - POSTGRES_URL=postgresql://surfai:surfaipass@postgres:5432/surfaidb
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - surfai-network
    volumes:
      - ./logs:/app/logs

  # üìä Cache Redis pour optimiser les performances
  redis:
    image: redis:7-alpine
    container_name: surfai-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-surfaipass}
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - surfai-network
    volumes:
      - redis-data:/data

  # üóÑÔ∏è Base de donn√©es PostgreSQL (optionnelle)
  postgres:
    image: postgres:15-alpine
    container_name: surfai-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: surfaidb
      POSTGRES_USER: surfai
      POSTGRES_PASSWORD: surfaipass
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U surfai -d surfaidb"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - surfai-network
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql

  # üñ•Ô∏è Nginx pour servir le frontend (optionnel)
  nginx:
    image: nginx:alpine
    container_name: surfai-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./frontend:/usr/share/nginx/html
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - surfai-backend
    networks:
      - surfai-network

  # üìä Monitoring avec Prometheus (optionnel)
  prometheus:
    image: prom/prometheus:latest
    container_name: surfai-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    networks:
      - surfai-network
    profiles:
      - monitoring

# üåê R√©seau pour la communication entre conteneurs
networks:
  surfai-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# üíæ Volumes persistants pour les donn√©es
volumes:
  redis-data:
    driver: local
  postgres-data:
    driver: local
  prometheus-data:
    driver: local